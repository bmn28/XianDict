<Window x:Class="XianDict.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:XianDict"
        mc:Ignorable="d"
        Title="MainWindow" Height="768" Width="1024">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>
        <Grid Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>

            </Grid.ColumnDefinitions>
            <TextBox x:Name="searchBox" Grid.Column="0" Height="23" Width="Auto" Margin="0" TextWrapping="Wrap" VerticalAlignment="Top"
                 Text="{Binding Path=Query, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="searchBox_TextChanged" />
            <Button x:Name="button" Content="Chinese" Grid.Column="1" Margin="5,0,0,0" VerticalAlignment="Top" Height="23" Width="75" HorizontalAlignment="Left" Click="button_Click"/>
        </Grid>

        <ListBox x:Name="resultsBox" HorizontalContentAlignment="Stretch" Margin="10,38,10,10" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 ItemsSource="{Binding Path=results}" SelectedItem="{Binding Path=SelectedEntry, Mode=TwoWay}">
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                    <Style.Resources>
                        <ResourceDictionary />
                    </Style.Resources>
                    <Setter Property="UIElement.SnapsToDevicePixels">
                        <Setter.Value>
                            <s:Boolean>True</s:Boolean>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Control.Padding">
                        <Setter.Value>
                            <Thickness>4,1,4,1</Thickness>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Control.HorizontalContentAlignment">
                        <Setter.Value>
                            <Binding Path="HorizontalContentAlignment" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ItemsControl, AncestorLevel=1}" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Control.VerticalContentAlignment">
                        <Setter.Value>
                            <Binding Path="VerticalContentAlignment" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ItemsControl, AncestorLevel=1}" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Panel.Background">
                        <Setter.Value>
                            <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Border.BorderBrush">
                        <Setter.Value>
                            <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Border.BorderThickness">
                        <Setter.Value>
                            <Thickness>1,1,1,1</Thickness>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="FrameworkElement.FocusVisualStyle">
                        <Setter.Value>
                            <Style TargetType="IFrameworkInputElement">
                                <Style.Resources>
                                    <ResourceDictionary />
                                </Style.Resources>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2" SnapsToDevicePixels="True" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <StackPanel>
                                    <Separator x:Name="Separator"/>
                                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True">
                                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                    </Border>
                                </StackPanel>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                                        <Setter Property="Visibility" TargetName="Separator" Value="Collapsed"/>
                                    </DataTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="UIElement.IsMouseOver">
                                                <Condition.Value>
                                                    <s:Boolean>True</s:Boolean>
                                                </Condition.Value>
                                            </Condition>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Panel.Background" TargetName="Bd">
                                            <Setter.Value>
                                                <SolidColorBrush>#1F26A0DA</SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Border.BorderBrush" TargetName="Bd">
                                            <Setter.Value>
                                                <SolidColorBrush>#A826A0DA</SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Selector.IsSelectionActive">
                                                <Condition.Value>
                                                    <s:Boolean>False</s:Boolean>
                                                </Condition.Value>
                                            </Condition>
                                            <Condition Property="Selector.IsSelected">
                                                <Condition.Value>
                                                    <s:Boolean>True</s:Boolean>
                                                </Condition.Value>
                                            </Condition>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Panel.Background" TargetName="Bd">
                                            <Setter.Value>
                                                <SolidColorBrush>#3DDADADA</SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Border.BorderBrush" TargetName="Bd">
                                            <Setter.Value>
                                                <SolidColorBrush>#FFDADADA</SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Selector.IsSelectionActive">
                                                <Condition.Value>
                                                    <s:Boolean>True</s:Boolean>
                                                </Condition.Value>
                                            </Condition>
                                            <Condition Property="Selector.IsSelected">
                                                <Condition.Value>
                                                    <s:Boolean>True</s:Boolean>
                                                </Condition.Value>
                                            </Condition>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Panel.Background" TargetName="Bd">
                                            <Setter.Value>
                                                <SolidColorBrush>#3D26A0DA</SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Border.BorderBrush" TargetName="Bd">
                                            <Setter.Value>
                                                <SolidColorBrush>#FF26A0DA</SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </MultiTrigger>
                                    <Trigger Property="UIElement.IsEnabled">
                                        <Setter Property="TextElement.Foreground" TargetName="Bd">
                                            <Setter.Value>
                                                <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                            </Setter.Value>
                                        </Setter>
                                        <Trigger.Value>
                                            <s:Boolean>False</s:Boolean>
                                        </Trigger.Value>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel>
                        <WrapPanel>
                            <TextBlock Text="{Binding Traditional}" FontSize="20" FontFamily="Microsoft JhengHei"  />
                            <TextBlock Text=" " />
                            <TextBlock Text="{Binding Pinyin}" VerticalAlignment="Bottom"/>
                        </WrapPanel>
                        <WrapPanel MaxHeight="48" >
                            <!--<ItemsControl ItemsSource="{Binding Definitions[0]}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding}" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" />
                                    </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>-->   
                        </WrapPanel>
                 
                    </StackPanel>


                </DataTemplate>

                <!--<TextBlock Text="{Binding}"/>
                    -->
                <!--<WrapPanel>
                        <TextBlock Text="{Binding Title}" />
                        <TextBlock Text="{Binding Path=Heteronyms[0].Pinyin}" />

                    </WrapPanel>-->
                <!--
                    <Grid Margin="0,2">
                        -->
                <!--<FlowDocumentPageViewer Document="{Binding FlowDocument}" HorizontalAlignment="Stretch" Height="200" IsHitTestVisible="False">
                            <FlowDocumentPageViewer.Template>
                                <ControlTemplate TargetType="{x:Type FlowDocumentPageViewer}">
                                    <AdornerDecorator>
                                        <DocumentPageView FlowDocumentPageViewer.IsMasterPage="True" />
                                    </AdornerDecorator>
                                </ControlTemplate>
                            </FlowDocumentPageViewer.Template>
                        </FlowDocumentPageViewer>-->
                <!--
                    </Grid>-->

            </ListBox.ItemTemplate>
        </ListBox>
        <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />
        <FlowDocumentScrollViewer Grid.Column="2" Name="fdViewer" />

    </Grid>
</Window>
