<Window x:Class="XianDict.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:XianDict"
        mc:Ignorable="d"
        Title="MainWindow" Height="768" Width="1024">
    <Window.Resources>
        <Style x:Key="ParagraphStyle" TargetType="Paragraph" />
        <Style x:Key="HeadwordStyle" TargetType="Paragraph">
            <Setter Property="FontSize" Value="36" />
            <Setter Property="FontFamily" Value="Microsoft JhengHei" />
            <Setter Property="Margin" Value="0" />
        </Style>
        <Style x:Key="TypeStyle" TargetType="Paragraph">
            <Setter Property="FontFamily" Value="Microsoft JhengHei" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Margin" Value="0" />
            <!--<Setter Property="Background" Value="Maroon" />
            <Setter Property="Foreground" Value="White" />-->
        </Style>
        <Style x:Key="HeadingStyle" TargetType="Paragraph">
            <Setter Property="Margin" Value="0" />
            <Setter Property="Foreground" Value="DodgerBlue" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontFamily" Value="Segoe UI" />
        </Style>
        <Style x:Key="PinyinStyle" TargetType="Paragraph">
            <Setter Property="Margin" Value="0" />
            <Setter Property="FontFamily" Value="Microsoft JhengHei" />
        </Style>
        <Style x:Key="QuoteStyle" TargetType="Paragraph">
            <Setter Property="FontFamily" Value="Microsoft JhengHei" />
        </Style>
        <Style x:Key="ExampleStyle" TargetType="Paragraph">
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontFamily" Value="Microsoft JhengHei" />
        </Style>
        <Style x:Key="EnglishParagraph" TargetType="Paragraph">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontFamily" Value="Segoe UI" />
        </Style>
        <Style TargetType="List">
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Padding" Value="25,0,0,0" />
            <Setter Property="Margin" Value="0" />
        </Style>
        <Style TargetType="ListItem">
            <Setter Property="FontFamily" Value="Microsoft JhengHei" />
            <Setter Property="FontWeight" Value="Regular" />
            <Setter Property="Margin" Value="0" />
        </Style>
        <Style TargetType="Hyperlink">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="TextDecorations" Value="" />
        </Style>
        <Style TargetType="Paragraph">
            <Setter Property="FontSize" Value="20" />
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>
        <Grid Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBox x:Name="searchBox" Grid.Column="0" Height="32" Width="Auto" Margin="0" TextWrapping="Wrap" VerticalAlignment="Top"
                 Text="{Binding Path=Query, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="searchBox_TextChanged" />
            <Button x:Name="button" Content="Chinese" Grid.Column="1" Margin="5,0,0,0" VerticalAlignment="Top" Height="32" Width="75" HorizontalAlignment="Left" Click="button_Click"/>
            <Grid Grid.Row="1" Grid.ColumnSpan="2" Height="32" Margin="0,5,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <ToggleButton Grid.Column="0" Content="Handwrite" />
                <ToggleButton Grid.Column="1" Content="Radical"/>
                <ToggleButton Grid.Column="2" Content="History"/>
                <ToggleButton Grid.Column="3" Content="Clipboard"/>
                <ToggleButton Grid.Column="4" Content="Settings"/>
            </Grid>
            <ListBox x:Name="resultsBox" Grid.ColumnSpan="2" Grid.Row="2" Height="Auto" HorizontalContentAlignment="Stretch" Margin="0,5,0,0" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ItemsSource="{Binding Path=results}" SelectedItem="{Binding Path=SelectedEntry, Mode=TwoWay}">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                        <Style.Resources>
                            <ResourceDictionary />
                        </Style.Resources>
                        <Setter Property="UIElement.SnapsToDevicePixels">
                            <Setter.Value>
                                <s:Boolean>True</s:Boolean>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Control.Padding">
                            <Setter.Value>
                                <Thickness>4,1,4,1</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Control.HorizontalContentAlignment">
                            <Setter.Value>
                                <Binding Path="HorizontalContentAlignment" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ItemsControl, AncestorLevel=1}" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Control.VerticalContentAlignment">
                            <Setter.Value>
                                <Binding Path="VerticalContentAlignment" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ItemsControl, AncestorLevel=1}" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Panel.Background">
                            <Setter.Value>
                                <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Border.BorderBrush">
                            <Setter.Value>
                                <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Border.BorderThickness">
                            <Setter.Value>
                                <Thickness>1,1,1,1</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="FrameworkElement.FocusVisualStyle">
                            <Setter.Value>
                                <Style TargetType="IFrameworkInputElement">
                                    <Style.Resources>
                                        <ResourceDictionary />
                                    </Style.Resources>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2" SnapsToDevicePixels="True" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <StackPanel>
                                        <Separator x:Name="Separator"/>
                                        <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True">
                                            <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                        </Border>
                                    </StackPanel>
                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                                            <Setter Property="Visibility" TargetName="Separator" Value="Collapsed"/>
                                        </DataTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="UIElement.IsMouseOver">
                                                    <Condition.Value>
                                                        <s:Boolean>True</s:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Panel.Background" TargetName="Bd">
                                                <Setter.Value>
                                                    <SolidColorBrush>#1F26A0DA</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Border.BorderBrush" TargetName="Bd">
                                                <Setter.Value>
                                                    <SolidColorBrush>#A826A0DA</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive">
                                                    <Condition.Value>
                                                        <s:Boolean>False</s:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                                <Condition Property="Selector.IsSelected">
                                                    <Condition.Value>
                                                        <s:Boolean>True</s:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Panel.Background" TargetName="Bd">
                                                <Setter.Value>
                                                    <SolidColorBrush>#3DDADADA</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Border.BorderBrush" TargetName="Bd">
                                                <Setter.Value>
                                                    <SolidColorBrush>#FFDADADA</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive">
                                                    <Condition.Value>
                                                        <s:Boolean>True</s:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                                <Condition Property="Selector.IsSelected">
                                                    <Condition.Value>
                                                        <s:Boolean>True</s:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Panel.Background" TargetName="Bd">
                                                <Setter.Value>
                                                    <SolidColorBrush>#3D26A0DA</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Border.BorderBrush" TargetName="Bd">
                                                <Setter.Value>
                                                    <SolidColorBrush>#FF26A0DA</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiTrigger>
                                        <Trigger Property="UIElement.IsEnabled">
                                            <Setter Property="TextElement.Foreground" TargetName="Bd">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                            <Trigger.Value>
                                                <s:Boolean>False</s:Boolean>
                                            </Trigger.Value>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Margin="1">
                            <WrapPanel>
                                <TextBlock Text="{Binding Traditional}" FontSize="20" FontFamily="Microsoft JhengHei"  />
                                <TextBlock Text=" " />
                                <TextBlock Text="{Binding Pinyin}" VerticalAlignment="Bottom"/>
                            </WrapPanel>
                            <WrapPanel MaxHeight="48" >
                                <!--<ItemsControl ItemsSource="{Binding Definitions[0]}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" />
                                        </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>-->
                            </WrapPanel>

                        </StackPanel>


                    </DataTemplate>

                    <!--<TextBlock Text="{Binding}"/>
                        -->
                    <!--<WrapPanel>
                            <TextBlock Text="{Binding Title}" />
                            <TextBlock Text="{Binding Path=Heteronyms[0].Pinyin}" />

                        </WrapPanel>-->
                    <!--
                        <Grid Margin="0,2">
                            -->
                    <!--<FlowDocumentPageViewer Document="{Binding FlowDocument}" HorizontalAlignment="Stretch" Height="200" IsHitTestVisible="False">
                                <FlowDocumentPageViewer.Template>
                                    <ControlTemplate TargetType="{x:Type FlowDocumentPageViewer}">
                                        <AdornerDecorator>
                                            <DocumentPageView FlowDocumentPageViewer.IsMasterPage="True" />
                                        </AdornerDecorator>
                                    </ControlTemplate>
                                </FlowDocumentPageViewer.Template>
                            </FlowDocumentPageViewer>-->
                    <!--
                        </Grid>-->

                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>

        <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />
        <FlowDocumentScrollViewer Grid.Column="2" Name="fdViewer" MouseUp="fdViewer_MouseUp" />

        <Popup Name="popup" StaysOpen="False" Placement="Mouse">
            <Border BorderBrush="Blue" BorderThickness="1" Background="White">
                <Grid>
                    <FlowDocumentScrollViewer Name="popupViewer" Width="400" MinHeight="100" MaxHeight="500"/>
                    <Button Name="popupPrev" Content="&lt;" Height="32" VerticalAlignment="Top" HorizontalAlignment="Right" Width="32" Margin="0,10,65,0" Click="popupPrev_Click"/>
                    <Button Name="popupNext" Content="&gt;" Height="32" VerticalAlignment="Top" HorizontalAlignment="Right" Width="32" Margin="0,10,26,0" Click="popupNext_Click"/>
                </Grid>
            </Border>
        </Popup>
    </Grid>
</Window>
